services:
    db:
        container_name: postgres_container
        image: postgres:14
        ports:
            - "5001:5432"
        environment:
            POSTGRES_USER: postgres
            POSTGRES_PASSWORD: postgres
            POSTGRES_DB: weather_db
        env_file:
            - .env
        volumes:
            - ./postgres/data:/var/lib/postgresql/data
            - ./postgres/airflow_init.sql:/docker-entrypoint-initdb.d/airflow_init.sql
        networks:
            - my_network

    airflow:
        container_name: airflow_container
        image: apache/airflow:3.0.0
        ports:
            - "8001:8080"
        environment:
            AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@db:5432/airflow_db
        env_file:
            - .env
        volumes:
            - ./airflow/dags:/opt/airflow/dags
            - ./airflow/logs:/opt/airflow/logs
            - ./airflow/plugins:/opt/airflow/plugins
            - ./code:/opt/airflow/code
        depends_on:
            - db
        networks:
            - my_network
        command: >
            bash -c "airflow db migrate && airflow standalone"
    
    dbt:
        container_name: dbt_container
        image:  ghcr.io/dbt-labs/dbt-postgres:1.9.latest
        platform: linux/amd64                               # if using macOS, Force the container to use the amd64 platform by adding this to your dbt service
        volumes:
            - ./dbt/my_project:/usr/app
            - ./dbt:/root/.dbt
        working_dir: /usr/app
        depends_on:
            - db
        networks:
            - my_network
        command: run

networks:
    my_network:
        driver: bridge